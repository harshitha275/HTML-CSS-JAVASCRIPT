{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/currency-converter/currency-converter.component.ts","./src/app/currency-converter/currency-converter.component.html","./src/app/currency-data.service.ts","./src/app/history/history.component.ts","./src/app/history/history.component.html","./src/currenciesHistory.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'CurrencyConverter';\n}\n","<router-outlet></router-outlet> ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { CurrencyConverterComponent } from './currency-converter/currency-converter.component';\nimport { HistoryComponent } from './history/history.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {RouterModule,Routes} from '@angular/router'\nimport {MatSelectModule} from '@angular/material/select';\nimport {  MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTableModule} from '@angular/material/table';\nconst routes:Routes=[\n  {path: '' , component : CurrencyConverterComponent},\n  {path: \"history\", component: HistoryComponent },\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CurrencyConverterComponent,\n    HistoryComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    RouterModule.forRoot(routes),\n    MatSelectModule,\n    FormsModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatTableModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { CurrenciesHistory } from 'src/currenciesHistory';\nimport { CurrencyDataService } from '../currency-data.service';\nimport { DatePipe } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-currency-converter',\n  templateUrl: './currency-converter.component.html',\n  styleUrls: ['./currency-converter.component.css'],\n  providers: [DatePipe]\n})\nexport class CurrencyConverterComponent implements OnInit {\n\n\n  EUR=\"EUR\";\n  USD: number;\n  CHF: number;\n  amount:number;\n  result: number;\n  selectedValue:string;\n  public show:boolean = false;\n  public data:CurrenciesHistory=new CurrenciesHistory() ;\n\n  constructor(private currencyDataService:CurrencyDataService,private router:Router,private datePipe: DatePipe) {\n   }\n   date = new Date();\n   currentDate:string;\n  ngOnInit(): void {\n    this.currencyDataService.getCurrencies().subscribe((data)=>{\n       this.USD=data.rates.USD;\n       this.CHF=data.rates.CHF;\n      })\n  }\n\n  convert(){\n    this.show= !this.show;\n \n    this.data.conversion_from=this.amount+ \" \"+ this.EUR;\n    this.data.conversion_to=this.result +\" \"+ this.selectedValue;\n    this.currentDate=this.datePipe.transform(this.date);\n    console.log(this.currentDate);\n    this.data.date=this.currentDate;\n  \n    console.log(this.data);\n    this.currencyDataService.createHistory(this.data).subscribe((val)=>{\n      console.log(val);\n      \n\n\n    });\n  }\n\n\n  \n  onDisplayingCurrency(){\n    if(this.selectedValue==\"USD\"){\n      this.result= this.amount*this.USD;\n      console.log(\"USD:\"+ this.result);\n    }\n    else{\n      this.result=this.amount*this.CHF;\n      console.log(\"CHF:\"+ this.result);\n    }\n  }\n   history(){\n    this.router.navigate(['history']);\n    \n   }\n}\n","<div class=\"main\">\n<div class=\"converter\">\n\n        <h2>CURRENCY CONVERTER</h2>\n    \n    <div class=\"container text-center\">\n       <mat-form-field class=\"example-full-width\">\n        <mat-label>Amount</mat-label>\n        <input matInput placeholder=\"Ex. 2\" [(ngModel)]=\"amount\">\n       </mat-form-field>\n    \n      \n    <div class=\"container text-center\">\n      <mat-form-field class=\"example-full-width\">\n       <mat-label>From</mat-label>\n       <input matInput value=\"EUR\" [(ngModel)]=\"EUR\"  >\n      </mat-form-field>\n    \n        <mat-form-field appearance=\"fill\">\n                <mat-label>To</mat-label>\n                <mat-select [(ngModel)]=\"selectedValue\" (ngModelChange)=\"onDisplayingCurrency()\"  >\n                  <mat-option value=\"USD\">USD</mat-option>\n                  <mat-option value=\"CHF\">CHF</mat-option>\n               </mat-select>\n            </mat-form-field>\n    \n            <div>\n              <button mat-raised-button color=\"primary\" (click)=\"convert()\">\n             Convert\n           </button>\n           <p *ngIf=\"show\">\n             {{amount}} {{EUR}}= {{result}} {{selectedValue}}\n           </p>\n          </div>\n    \n       \n    </div>\n    </div>\n</div>\n\n\n<div align=\"right\">\n        <button mat-raised-button  (click)=\"history()\">\n            View Conversion History\n        </button>\n      </div>\n\n</div>\n\n\n\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { CurrenciesHistory } from 'src/currenciesHistory';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CurrencyDataService {\n  dataChange: BehaviorSubject<CurrenciesHistory[]> = new BehaviorSubject<CurrenciesHistory[]>([]);\n    private baseUrl:string=\"http://localhost:8081/api\";\n  private currenciesHistory = new CurrenciesHistory();\n  refreshData: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  constructor(private httpclient:HttpClient) { }\n  \n  public getCurrencies() :Observable<any>{\n    return this.httpclient.get(`https://api.exchangeratesapi.io/latest`);\n  }\n  getHistories(): Observable<CurrenciesHistory[]> {\n    return this.httpclient.get<CurrenciesHistory[]>(`${this.baseUrl + '/getHistories'}`);\n  }\n  createHistory(currenciesHistory: CurrenciesHistory) {\n    return this.httpclient.post(`${this.baseUrl + '/postHistory'}`, currenciesHistory);\n  }\n  setter(currenciesHistory:CurrenciesHistory){\n    this.currenciesHistory=currenciesHistory;\n  }\n getter(){\n   return this.currenciesHistory;\n }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CurrenciesHistory } from 'src/currenciesHistory';\nimport { MatTable } from '@angular/material/table';\nimport { CurrencyDataService } from '../currency-data.service';\nimport { DataSource } from '@angular/cdk/table';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.css']\n})\nexport class HistoryComponent implements OnInit {\n\n \n  currencyDataSource:CurrenciesHistory[];\n  @ViewChild(MatTable, {static: true}) table: MatTable<any>;\n  displayedColumns = ['Conversion_from', 'Conversion_to', 'Date'];\n  constructor(private currencyDataService:CurrencyDataService) { }\n\n  ngOnInit(): void {\n    this.currencyDataService.getHistories().subscribe(val=>{\n      console.log(val);\n      this.currencyDataSource=val;\n  });\n\n\n}\n}\n\n\nexport class CurrencyDataSource extends DataSource<any> {\n\n  constructor(private currencyDataService: CurrencyDataService) {\n    super();\n  }\n\n  connect(): Observable<CurrenciesHistory[]> {\n    return this.currencyDataService.getHistories();\n  }\n\n  disconnect() {\n  }\n}\n","\n<div class=\"example-container\">\n    <mat-table [dataSource]=\"currencyDataSource\">\n        <ng-container matColumnDef=\"Conversion_from\">\n          <mat-header-cell *matHeaderCellDef [ngClass]=\"'heading'\"> From</mat-header-cell>\n          <mat-cell *matCellDef=\"let CurrenciesHistory\"> {{CurrenciesHistory.conversion_from}}</mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"Conversion_to\">\n          <mat-header-cell *matHeaderCellDef [ngClass]=\"'heading'\"> To </mat-header-cell>\n          <mat-cell *matCellDef=\"let CurrenciesHistory\"> {{CurrenciesHistory.conversion_to}} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"Date\">\n                <mat-header-cell *matHeaderCellDef [ngClass]=\"'heading'\"> Date</mat-header-cell>\n                <mat-cell *matCellDef=\"let CurrenciesHistory\"> {{CurrenciesHistory.date}} </mat-cell>\n        </ng-container>\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>     \n</mat-table>\n\n</div>\n  ","export class CurrenciesHistory {\r\n    conversion_from: string;\r\n    conversion_to:string;\r\n    date:string;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}