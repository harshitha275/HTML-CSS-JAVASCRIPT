{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/currency-converter/currency-converter.component.ts","webpack:///src/app/currency-converter/currency-converter.component.html","webpack:///src/app/currency-data.service.ts","webpack:///src/app/history/history.component.ts","webpack:///src/app/history/history.component.html","webpack:///src/currenciesHistory.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","routes","path","component","AppModule","forRoot","declarations","imports","providers","bootstrap","CurrencyConverterComponent","currencyDataService","router","datePipe","EUR","show","data","date","Date","getCurrencies","subscribe","USD","rates","CHF","conversion_from","amount","conversion_to","result","selectedValue","currentDate","transform","console","log","createHistory","val","navigate","onDisplayingCurrency","convert","history","CurrencyDataService","httpclient","dataChange","baseUrl","currenciesHistory","refreshData","get","post","providedIn","HistoryComponent","displayedColumns","getHistories","currencyDataSource","CurrencyDataSource","CurrenciesHistory","environment","production","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,mBAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACPzB;;;;;;;;;sEDOaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAiBA,QAAMC,MAAM,GAAQ,CAClB;AAACC,UAAI,EAAE,EAAP;AAAYC,eAAS,EAAG;AAAxB,KADkB,EAElB;AAACD,UAAI,EAAE,SAAP;AAAkBC,eAAS,EAAE;AAA7B,KAFkB,CAApB;;QA4BaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBAdJ,CACP,uEADO,EAEP,4FAFO,EAGP,sEAHO,EAIP,oEAJO,EAKP,0EALO,EAMP,gFANO,EAOP,6DAAaC,OAAb,CAAqBJ,MAArB,CAPO,EAQP,yEARO,EASP,2DATO,EAUP,sEAVO,EAWP,yEAXO,EAYP,uEAZO,CAcI;;;;0HAGFG,S,EAAS;AAAA,uBArBlB,2DAqBkB,EApBlB,2GAoBkB,EAnBlB,2EAmBkB;AAnBF,kBAGhB,uEAHgB,EAIhB,4FAJgB,EAKhB,sEALgB,EAMhB,oEANgB,EAOhB,0EAPgB,EAQhB,gFARgB,EAQE,4DARF,EAUhB,yEAVgB,EAWhB,2DAXgB,EAYhB,sEAZgB,EAahB,yEAbgB,EAchB,uEAdgB;AAmBE,O;AALJ,K;;;;;sEAKLA,S,EAAS;cAvBrB,sDAuBqB;eAvBZ;AACRE,sBAAY,EAAE,CACZ,2DADY,EAEZ,2GAFY,EAGZ,2EAHY,CADN;AAMRC,iBAAO,EAAE,CACP,uEADO,EAEP,4FAFO,EAGP,sEAHO,EAIP,oEAJO,EAKP,0EALO,EAMP,gFANO,EAOP,6DAAaF,OAAb,CAAqBJ,MAArB,CAPO,EAQP,yEARO,EASP,2DATO,EAUP,sEAVO,EAWP,yEAXO,EAYP,uEAZO,CAND;AAoBRO,mBAAS,EAAE,EApBH;AAqBRC,mBAAS,EAAE,CAAC,2DAAD;AArBH,S;AAuBY,Q;;;;;;;;;;;;;;;;;;AC7CtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC8BW;;AACE;;AACF;;;;;;AADE;;AAAA;;;;QDnBAC,0B;AAYX,0CAAoBC,mBAApB,EAAoEC,MAApE,EAA0FC,QAA1F,EAA8G;AAAA;;AAA1F,aAAAF,mBAAA,GAAAA,mBAAA;AAAgD,aAAAC,MAAA,GAAAA,MAAA;AAAsB,aAAAC,QAAA,GAAAA,QAAA;AAT1F,aAAAC,GAAA,GAAI,KAAJ;AAMO,aAAAC,IAAA,GAAe,KAAf;AACA,aAAAC,IAAA,GAAuB,IAAI,uEAAJ,EAAvB;AAIN,aAAAC,IAAA,GAAO,IAAIC,IAAJ,EAAP;AADC;;;;mCAGM;AAAA;;AACN,eAAKP,mBAAL,CAAyBQ,aAAzB,GAAyCC,SAAzC,CAAmD,UAACJ,IAAD,EAAQ;AACxD,iBAAI,CAACK,GAAL,GAASL,IAAI,CAACM,KAAL,CAAWD,GAApB;AACA,iBAAI,CAACE,GAAL,GAASP,IAAI,CAACM,KAAL,CAAWC,GAApB;AACA,WAHH;AAID;;;kCAEM;AACL,eAAKR,IAAL,GAAW,CAAC,KAAKA,IAAjB;AAEA,eAAKC,IAAL,CAAUQ,eAAV,GAA0B,KAAKC,MAAL,GAAa,GAAb,GAAkB,KAAKX,GAAjD;AACA,eAAKE,IAAL,CAAUU,aAAV,GAAwB,KAAKC,MAAL,GAAa,GAAb,GAAkB,KAAKC,aAA/C;AACA,eAAKC,WAAL,GAAiB,KAAKhB,QAAL,CAAciB,SAAd,CAAwB,KAAKb,IAA7B,CAAjB;AACAc,iBAAO,CAACC,GAAR,CAAY,KAAKH,WAAjB;AACA,eAAKb,IAAL,CAAUC,IAAV,GAAe,KAAKY,WAApB;AAEAE,iBAAO,CAACC,GAAR,CAAY,KAAKhB,IAAjB;AACA,eAAKL,mBAAL,CAAyBsB,aAAzB,CAAuC,KAAKjB,IAA5C,EAAkDI,SAAlD,CAA4D,UAACc,GAAD,EAAO;AACjEH,mBAAO,CAACC,GAAR,CAAYE,GAAZ;AAID,WALD;AAMD;;;+CAImB;AAClB,cAAG,KAAKN,aAAL,IAAoB,KAAvB,EAA6B;AAC3B,iBAAKD,MAAL,GAAa,KAAKF,MAAL,GAAY,KAAKJ,GAA9B;AACAU,mBAAO,CAACC,GAAR,CAAY,SAAQ,KAAKL,MAAzB;AACD,WAHD,MAII;AACF,iBAAKA,MAAL,GAAY,KAAKF,MAAL,GAAY,KAAKF,GAA7B;AACAQ,mBAAO,CAACC,GAAR,CAAY,SAAQ,KAAKL,MAAzB;AACD;AACF;;;kCACO;AACN,eAAKf,MAAL,CAAYuB,QAAZ,CAAqB,CAAC,SAAD,CAArB;AAEA;;;;;;;uBAxDSzB,0B,EAA0B,2I,EAAA,uH,EAAA,yH;AAAA,K;;;YAA1BA,0B;AAA0B,6C;AAAA,kFAF1B,CAAC,wDAAD,CAE0B,E;AAFhB,e;AAAA,a;AAAA,md;AAAA;AAAA;ACVvB;;AACA;;AAEQ;;AAAI;;AAAkB;;AAE1B;;AACG;;AACC;;AAAW;;AAAM;;AACjB;;AAAoC;AAAA;AAAA;;AAApC;;AACD;;AAGH;;AACE;;AACC;;AAAW;;AAAI;;AACf;;AAA4B;AAAA;AAAA;;AAA5B;;AACD;;AAEE;;AACQ;;AAAW;;AAAE;;AACb;;AAAY;AAAA;AAAA,aAA2B,eAA3B,EAA2B;AAAA,mBAAkB,IAAA0B,oBAAA,EAAlB;AAAwC,WAAnE;;AACV;;AAAwB;;AAAG;;AAC3B;;AAAwB;;AAAG;;AAC9B;;AACH;;AAEA;;AACE;;AAA0C;AAAA,mBAAS,IAAAC,OAAA,EAAT;AAAkB,WAAlB;;AAC3C;;AACF;;AACA;;AAGD;;AAGN;;AACA;;AACJ;;AAGA;;AACQ;;AAA2B;AAAA,mBAAS,IAAAC,OAAA,EAAT;AAAkB,WAAlB;;AACvB;;AACJ;;AACF;;AAEN;;;;AAvC4C;;AAAA;;AAOT;;AAAA;;AAKP;;AAAA;;AAUd;;AAAA;;;;;;;;;sEDlBD5B,0B,EAA0B;cANtC,uDAMsC;eAN5B;AACTZ,kBAAQ,EAAE,wBADD;AAETC,qBAAW,EAAE,qCAFJ;AAGTC,mBAAS,EAAE,CAAC,oCAAD,CAHF;AAITQ,mBAAS,EAAE,CAAC,wDAAD;AAJF,S;AAM4B,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEZvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa+B,mB;AAKX,mCAAoBC,UAApB,EAA2C;AAAA;;AAAvB,aAAAA,UAAA,GAAAA,UAAA;AAJpB,aAAAC,UAAA,GAAmD,IAAI,6EAAJ,CAAyC,EAAzC,CAAnD;AACU,aAAAC,OAAA,GAAe,2BAAf;AACF,aAAAC,iBAAA,GAAoB,IAAI,uEAAJ,EAApB;AACR,aAAAC,WAAA,GAAwC,IAAI,6EAAJ,CAA6B,KAA7B,CAAxC;AAC8C;;;;wCAEvB;AACrB,iBAAO,KAAKJ,UAAL,CAAgBK,GAAhB,0CAAP;AACD;;;uCACW;AACV,iBAAO,KAAKL,UAAL,CAAgBK,GAAhB,WAA4C,KAAKH,OAAL,GAAe,eAA3D,EAAP;AACD;;;sCACaC,iB,EAAsC;AAClD,iBAAO,KAAKH,UAAL,CAAgBM,IAAhB,WAAwB,KAAKJ,OAAL,GAAe,cAAvC,GAAyDC,iBAAzD,CAAP;AACD;;;+BACMA,iB,EAAmC;AACxC,eAAKA,iBAAL,GAAuBA,iBAAvB;AACD;;;iCACI;AACJ,iBAAO,KAAKA,iBAAZ;AACD;;;;;;;uBArBWJ,mB,EAAmB,uH;AAAA,K;;;aAAnBA,mB;AAAmB,eAAnBA,mBAAmB,K;AAAA,kBAFlB;;;;;sEAEDA,mB,EAAmB;cAH/B,wDAG+B;eAHpB;AACVQ,oBAAU,EAAE;AADF,S;AAGoB,Q;;;;;;;;;;;;;;;;;;;;;;ACThC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACIU;;AAA0D;;AAAI;;;;AAA3B;;;;;;AACnC;;AAA+C;;AAAqC;;;;;;AAArC;;AAAA;;;;;;AAG/C;;AAA0D;;AAAG;;;;AAA1B;;;;;;AACnC;;AAA+C;;AAAoC;;;;;;AAApC;;AAAA;;;;;;AAGzC;;AAA0D;;AAAI;;;;AAA3B;;;;;;AACnC;;AAA+C;;AAA2B;;;;;;AAA3B;;AAAA;;;;;;AAEvD;;;;;;AACA;;;;QDJKC,gB;AAMX,gCAAoBrC,mBAApB,EAA6D;AAAA;;AAAzC,aAAAA,mBAAA,GAAAA,mBAAA;AADpB,aAAAsC,gBAAA,GAAmB,CAAC,iBAAD,EAAoB,eAApB,EAAqC,MAArC,CAAnB;AACgE;;;;mCAExD;AAAA;;AACN,eAAKtC,mBAAL,CAAyBuC,YAAzB,GAAwC9B,SAAxC,CAAkD,UAAAc,GAAG,EAAE;AACrDH,mBAAO,CAACC,GAAR,CAAYE,GAAZ;AACA,kBAAI,CAACiB,kBAAL,GAAwBjB,GAAxB;AACH,WAHC;AAMH;;;;;;;uBAfYc,gB,EAAgB,2I;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA;AAAA;0EAIhB,gE,EAAU,I;;;;;;;;;;;;;;ACfvB;;AACI;;AACI;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACQ;;AACA;;AACR;;AACA;;AACA;;AACR;;AAEA;;;;AAjBe;;AAAA;;AAaS;;AAAA;;AACP;;AAAA;;;;;;;;;sEDJJA,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTlD,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKkB,Q;;;;;;gBAI1B,uD;iBAAU,gE,EAAU;AAAC,sBAAQ;AAAT,W;;;;;QAeVoD,kB;;;;;AAEX,kCAAoBzC,mBAApB,EAA8D;AAAA;;AAAA;;AAC5D;AADkB,eAAAA,mBAAA,GAAAA,mBAAA;AAA0C;AAE7D;;;;kCAEM;AACL,iBAAO,KAAKA,mBAAL,CAAyBuC,YAAzB,EAAP;AACD;;;qCAEY,CACZ;;;;MAXqC,6D;;;;;;;;;;;;;;;;;AE/BxC;AAAA;;;AAAA;AAAA;AAAA;;QAAaG,iB;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAI1B,OAAO,CAAC2B,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'CurrencyConverter';\n}\n","<router-outlet></router-outlet> ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { CurrencyConverterComponent } from './currency-converter/currency-converter.component';\nimport { HistoryComponent } from './history/history.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {RouterModule,Routes} from '@angular/router'\nimport {MatSelectModule} from '@angular/material/select';\nimport {  MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTableModule} from '@angular/material/table';\nconst routes:Routes=[\n  {path: '' , component : CurrencyConverterComponent},\n  {path: \"history\", component: HistoryComponent },\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CurrencyConverterComponent,\n    HistoryComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    RouterModule.forRoot(routes),\n    MatSelectModule,\n    FormsModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatTableModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { CurrenciesHistory } from 'src/currenciesHistory';\nimport { CurrencyDataService } from '../currency-data.service';\nimport { DatePipe } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-currency-converter',\n  templateUrl: './currency-converter.component.html',\n  styleUrls: ['./currency-converter.component.css'],\n  providers: [DatePipe]\n})\nexport class CurrencyConverterComponent implements OnInit {\n\n\n  EUR=\"EUR\";\n  USD: number;\n  CHF: number;\n  amount:number;\n  result: number;\n  selectedValue:string;\n  public show:boolean = false;\n  public data:CurrenciesHistory=new CurrenciesHistory() ;\n\n  constructor(private currencyDataService:CurrencyDataService,private router:Router,private datePipe: DatePipe) {\n   }\n   date = new Date();\n   currentDate:string;\n  ngOnInit(): void {\n    this.currencyDataService.getCurrencies().subscribe((data)=>{\n       this.USD=data.rates.USD;\n       this.CHF=data.rates.CHF;\n      })\n  }\n\n  convert(){\n    this.show= !this.show;\n \n    this.data.conversion_from=this.amount+ \" \"+ this.EUR;\n    this.data.conversion_to=this.result +\" \"+ this.selectedValue;\n    this.currentDate=this.datePipe.transform(this.date);\n    console.log(this.currentDate);\n    this.data.date=this.currentDate;\n  \n    console.log(this.data);\n    this.currencyDataService.createHistory(this.data).subscribe((val)=>{\n      console.log(val);\n      \n\n\n    });\n  }\n\n\n  \n  onDisplayingCurrency(){\n    if(this.selectedValue==\"USD\"){\n      this.result= this.amount*this.USD;\n      console.log(\"USD:\"+ this.result);\n    }\n    else{\n      this.result=this.amount*this.CHF;\n      console.log(\"CHF:\"+ this.result);\n    }\n  }\n   history(){\n    this.router.navigate(['history']);\n    \n   }\n}\n","<div class=\"main\">\n<div class=\"converter\">\n\n        <h2>CURRENCY CONVERTER</h2>\n    \n    <div class=\"container text-center\">\n       <mat-form-field class=\"example-full-width\">\n        <mat-label>Amount</mat-label>\n        <input matInput placeholder=\"Ex. 2\" [(ngModel)]=\"amount\">\n       </mat-form-field>\n    \n      \n    <div class=\"container text-center\">\n      <mat-form-field class=\"example-full-width\">\n       <mat-label>From</mat-label>\n       <input matInput value=\"EUR\" [(ngModel)]=\"EUR\"  >\n      </mat-form-field>\n    \n        <mat-form-field appearance=\"fill\">\n                <mat-label>To</mat-label>\n                <mat-select [(ngModel)]=\"selectedValue\" (ngModelChange)=\"onDisplayingCurrency()\"  >\n                  <mat-option value=\"USD\">USD</mat-option>\n                  <mat-option value=\"CHF\">CHF</mat-option>\n               </mat-select>\n            </mat-form-field>\n    \n            <div>\n              <button mat-raised-button color=\"primary\" (click)=\"convert()\">\n             Convert\n           </button>\n           <p *ngIf=\"show\">\n             {{amount}} {{EUR}}= {{result}} {{selectedValue}}\n           </p>\n          </div>\n    \n       \n    </div>\n    </div>\n</div>\n\n\n<div align=\"right\">\n        <button mat-raised-button  (click)=\"history()\">\n            View Conversion History\n        </button>\n      </div>\n\n</div>\n\n\n\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\nimport { CurrenciesHistory } from 'src/currenciesHistory';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CurrencyDataService {\n  dataChange: BehaviorSubject<CurrenciesHistory[]> = new BehaviorSubject<CurrenciesHistory[]>([]);\n    private baseUrl:string=\"http://localhost:8081/api\";\n  private currenciesHistory = new CurrenciesHistory();\n  refreshData: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  constructor(private httpclient:HttpClient) { }\n  \n  public getCurrencies() :Observable<any>{\n    return this.httpclient.get(`https://api.exchangeratesapi.io/latest`);\n  }\n  getHistories(): Observable<CurrenciesHistory[]> {\n    return this.httpclient.get<CurrenciesHistory[]>(`${this.baseUrl + '/getHistories'}`);\n  }\n  createHistory(currenciesHistory: CurrenciesHistory) {\n    return this.httpclient.post(`${this.baseUrl + '/postHistory'}`, currenciesHistory);\n  }\n  setter(currenciesHistory:CurrenciesHistory){\n    this.currenciesHistory=currenciesHistory;\n  }\n getter(){\n   return this.currenciesHistory;\n }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CurrenciesHistory } from 'src/currenciesHistory';\nimport { MatTable } from '@angular/material/table';\nimport { CurrencyDataService } from '../currency-data.service';\nimport { DataSource } from '@angular/cdk/table';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.css']\n})\nexport class HistoryComponent implements OnInit {\n\n \n  currencyDataSource:CurrenciesHistory[];\n  @ViewChild(MatTable, {static: true}) table: MatTable<any>;\n  displayedColumns = ['Conversion_from', 'Conversion_to', 'Date'];\n  constructor(private currencyDataService:CurrencyDataService) { }\n\n  ngOnInit(): void {\n    this.currencyDataService.getHistories().subscribe(val=>{\n      console.log(val);\n      this.currencyDataSource=val;\n  });\n\n\n}\n}\n\n\nexport class CurrencyDataSource extends DataSource<any> {\n\n  constructor(private currencyDataService: CurrencyDataService) {\n    super();\n  }\n\n  connect(): Observable<CurrenciesHistory[]> {\n    return this.currencyDataService.getHistories();\n  }\n\n  disconnect() {\n  }\n}\n","\n<div class=\"example-container\">\n    <mat-table [dataSource]=\"currencyDataSource\">\n        <ng-container matColumnDef=\"Conversion_from\">\n          <mat-header-cell *matHeaderCellDef [ngClass]=\"'heading'\"> From</mat-header-cell>\n          <mat-cell *matCellDef=\"let CurrenciesHistory\"> {{CurrenciesHistory.conversion_from}}</mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"Conversion_to\">\n          <mat-header-cell *matHeaderCellDef [ngClass]=\"'heading'\"> To </mat-header-cell>\n          <mat-cell *matCellDef=\"let CurrenciesHistory\"> {{CurrenciesHistory.conversion_to}} </mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"Date\">\n                <mat-header-cell *matHeaderCellDef [ngClass]=\"'heading'\"> Date</mat-header-cell>\n                <mat-cell *matCellDef=\"let CurrenciesHistory\"> {{CurrenciesHistory.date}} </mat-cell>\n        </ng-container>\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>     \n</mat-table>\n\n</div>\n  ","export class CurrenciesHistory {\r\n    conversion_from: string;\r\n    conversion_to:string;\r\n    date:string;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}